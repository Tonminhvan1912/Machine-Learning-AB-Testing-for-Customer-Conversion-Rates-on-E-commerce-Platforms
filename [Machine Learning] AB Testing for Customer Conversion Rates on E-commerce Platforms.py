# -*- coding: utf-8 -*-
"""[Machine Learning] A/B Testing for Customer Conversion Rates on E-commerce Platforms

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1M1oRtSgRLu-5xVVLTF4dT9MTAhUZTs3T

# **1. Design A/B testing experiment**

**Hypothesis Statement:** If we change the promotional content on the banner to align with Screen B, the conversion rate of users buying the membership subscription will be higher than Screen A

**Measurable Metrics:**
+ **Primary Metrics:** Conversion rate of users buying the subscription
+ **Counter Metrics:** The lag time for loading banner

**Sample pool:** All users who use our app

**External Factors:** Bugs in user app, System Errors,...

# **2. Hypothesis Testing**
"""

from scipy.stats import chi2_contingency
import pandas as pd
import numpy as np
#1. Create a contigency table
df = pd.read_csv('abtesting.csv')
group1 = df[df['group'] == 1]
group2 = df[df['group'] == 2]

group1__non_converted = group1.loc[group1['is_buy'] == 0]['is_buy'].count()
group2__non_converted = group2.loc[group2['is_buy'] == 0]['is_buy'].count()

group1__converted = group1.loc[group1['is_buy'] == 1]['is_buy'].count()
group2__converted = group2.loc[group2['is_buy'] == 1]['is_buy'].count()

contingency_table = np.array([[group1__converted,group1__non_converted],
                              [group2__converted,group2__non_converted]])
print(contingency_table)
#2. Apply chi-square test:

result = chi2_contingency(contingency_table,correction = True)
result

"""**The test result is significant**

H0: The conversion rate between Screen A & Screen B is not different

H1: The conversion rate between Screen A & Screen B is different

**Chi-square test result:**

p_value = 0.0000 < 0.05

==> Reject H0

**The conversion rate between Screen A & Screen B is different**
"""

# Calculate the relative uplift in Conversion Rate
group1_count = group1['is_buy'].count()
group2_count = group2['is_buy'].count()
conversionrategroup1 = group1__converted/group1_count
conversionrategroup2 = group2__converted/group2_count
relative_uplift = (conversionrategroup2 - conversionrategroup1)/conversionrategroup1
print('Conversion rate group 1 is:' , conversionrategroup1)
print('Conversion rate group 2 is:' , conversionrategroup2)
print('Relative uplift is:' , relative_uplift)

"""Comment:

+ Variation A has a **higher conversion rate** compared to Variation B.

+ The relative uplift of -16% indicates that **Variation B has decreased by 16% compared to Variation A**.

==> **Variation A is the better option**, as it has a higher conversion rate

Notes:

Variation A: Screen A

Variation B: Screen B
"""